{"name": "test_login[data1]", "status": "broken", "statusDetails": {"message": "NotADirectoryError: [WinError 267] 目录名称无效。: 'E:\\\\Python_Learns\\\\WEB自动化测试框架\\\\driver\\\\geckodriver.exe'", "trace": "self = <WEB自动化测试框架.test_case.test_login.TestLogin object at 0x000001FB67641348>\n\n    def setup(self):\n>       self.main = Main()\n\ntest_case\\test_login.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npage\\basepage.py:40: in __init__\n    self._driver = webdriver.Firefox(setting.BROWSER_DRIVER_PARH['firefox'])\nE:\\Python\\lib\\site-packages\\selenium\\webdriver\\firefox\\webdriver.py:151: in __init__\n    firefox_profile = FirefoxProfile(firefox_profile)\nE:\\Python\\lib\\site-packages\\selenium\\webdriver\\firefox\\firefox_profile.py:80: in __init__\n    ignore=shutil.ignore_patterns(\"parent.lock\", \"lock\", \".parentlock\"))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = 'E:\\\\Python_Learns\\\\WEB自动化测试框架\\\\driver\\\\geckodriver.exe', dst = 'C:\\\\Users\\\\胡云峰\\\\AppData\\\\Local\\\\Temp\\\\tmp9axh_spd\\\\webdriver-py-profilecopy', symlinks = False\nignore = <function ignore_patterns.<locals>._ignore_patterns at 0x000001FB6771CAF8>, copy_function = <function copy2 at 0x000001FB5F53D798>\nignore_dangling_symlinks = False\n\n    def copytree(src, dst, symlinks=False, ignore=None, copy_function=copy2,\n                 ignore_dangling_symlinks=False):\n        \"\"\"Recursively copy a directory tree.\n    \n        The destination directory must not already exist.\n        If exception(s) occur, an Error is raised with a list of reasons.\n    \n        If the optional symlinks flag is true, symbolic links in the\n        source tree result in symbolic links in the destination tree; if\n        it is false, the contents of the files pointed to by symbolic\n        links are copied. If the file pointed by the symlink doesn't\n        exist, an exception will be added in the list of errors raised in\n        an Error exception at the end of the copy process.\n    \n        You can set the optional ignore_dangling_symlinks flag to true if you\n        want to silence this exception. Notice that this has no effect on\n        platforms that don't support os.symlink.\n    \n        The optional ignore argument is a callable. If given, it\n        is called with the `src` parameter, which is the directory\n        being visited by copytree(), and `names` which is the list of\n        `src` contents, as returned by os.listdir():\n    \n            callable(src, names) -> ignored_names\n    \n        Since copytree() is called recursively, the callable will be\n        called once for each directory that is copied. It returns a\n        list of names relative to the `src` directory that should\n        not be copied.\n    \n        The optional copy_function argument is a callable that will be used\n        to copy each file. It will be called with the source path and the\n        destination path as arguments. By default, copy2() is used, but any\n        function that supports the same signature (like copy()) can be used.\n    \n        \"\"\"\n>       names = os.listdir(src)\nE       NotADirectoryError: [WinError 267] 目录名称无效。: 'E:\\\\Python_Learns\\\\WEB自动化测试框架\\\\driver\\\\geckodriver.exe'\n\nE:\\Python\\lib\\shutil.py:318: NotADirectoryError"}, "parameters": [{"name": "data", "value": "{'case_id': 'login_case_002', 'case_title': '用户输入错误的用户名、\\n正确的密码，点击登录', 'test_data': {'username': 'alive1', 'password': 123456}, 'exp': {'by': 'xpath', 'locater': \"//*[@id='common-prompt']/div/p\", 'exp_value': '登录帐号不存在'}}"}], "start": 1663422547722, "stop": 1663422547722, "uuid": "9e5fa72f-393a-454e-8599-7be8045f3258", "historyId": "6a42ab545080d6017bf21853c464e0cc", "testCaseId": "c6db3f0583de5245fe1a62b1d735a86c", "fullName": "run.TestLogin#test_login", "labels": [{"name": "suite", "value": "run"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-5FKMFO0H"}, {"name": "thread", "value": "16536-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "run"}]}